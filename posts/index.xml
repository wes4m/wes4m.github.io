<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on wes4m</title>
        <link>https://wes4m.io/posts/</link>
        <description>Recent content in Posts on wes4m</description>
        <generator>Hugo -- gohugo.io</generator>
        
        
        
        
        
        <lastBuildDate>Tue, 21 Jan 2025 02:47:01</lastBuildDate>
        <atom:link href="https://wes4m.io/posts/index.xml" rel="self" type="application/rss+xml" />
        <item>
            <title>Hybrid Migration: Native to React Native</title>
            <link>https://wes4m.io/posts/rn-migration/</link>
            <pubDate>Tue, Jan 21 2025</pubDate>
            
            <guid>https://wes4m.io/posts/rn-migration/</guid>
            <description>At Ejaro, we have been transitioning to React Native over the past two years while continuing to build new features and growing our app. Instead of undertaking a complete rewrite from scratch, we adopted a hybrid approach. This strategy has been successfully implemented by companies like Shopify and others. In this post I go over some of the decision taking approaches, challenges, and solutions we implemented.
Why Move to React Native?</description>
            
        </item>
        
        <item>
            <title>Lessons from a $5 VPS, Bad Design, and a Traffic Spike</title>
            <link>https://wes4m.io/posts/5vps/</link>
            <pubDate>Fri, Jan 3 2025</pubDate>
            
            <guid>https://wes4m.io/posts/5vps/</guid>
            <description>A year ago I duct-taped together, in a couple of days, an app for fun as an experiment. Without putting much thought into its design or scaleability. I then put it to run on a tiny ~$5 VPS. Not expecting more than a few users. It went on to gain users very slowly for a year. Until, fast forward to last month, STUDI&amp;rsquo;s traffic and users spiked nearly 20x in just a few days, and reached 2nd on AppStore&amp;rsquo;s education charts.</description>
            
        </item>
        
        <item>
            <title>Side Project #9837: Visual Nodes Scripting</title>
            <link>https://wes4m.io/posts/ta-dataflow-programming/</link>
            <pubDate>Fri, Feb 10 2023</pubDate>
            
            <guid>https://wes4m.io/posts/ta-dataflow-programming/</guid>
            <description>There are many visual programming implementations out there that make approaching some specific tasks easier. One of which is Unreal Engine&amp;rsquo;s Blueprint&amp;rsquo;s system.
It provides game developers with a way to program visually by connecting different nodes. Each node taking in some inputs, and/or options, doing something with it, then outputting the results. You can also implement your own re-useable nodes using C&#43;&#43;. It&amp;rsquo;s apparently turing complete too.
I wanted to make something similar for a project I&amp;rsquo;m working on, which brings us to: Data Flow Programming, Flow Based Programming, Node Graph Architecture, and a thousand other names.</description>
            
            <category>dev</category>
            
            <category>golang</category>
            
        </item>
        
        <item>
            <title>Reverse Engineering Thermal Printers</title>
            <link>https://wes4m.io/posts/epson_rev/</link>
            <pubDate>Fri, Sep 2 2022</pubDate>
            
            <guid>https://wes4m.io/posts/epson_rev/</guid>
            <description>A significant part of my current work involves dealing with thermal printers to print receipts, invoices, item slips etc ..; For those unfamiliar. I&amp;rsquo;m talking about those usually small cashier side printers that print your receipts when you buy something from a restaurant, or any other shop.
Thermal printers use a universal protocol to send/receive printing commands. This protocol is called ESC/POS. For anyone stumbling on to this post trying to figure-out what the heck is going on with those printers, I feel you.</description>
            
            <category>Network</category>
            
            <category>Reverse</category>
            
        </item>
        
        <item>
            <title>Fuzzing, Emulation, and Random low-level fun #1</title>
            <link>https://wes4m.io/posts/random_fun/</link>
            <pubDate>Sun, Dec 27 2020</pubDate>
            
            <guid>https://wes4m.io/posts/random_fun/</guid>
            <description>As the amazing year of 2020 comes to an end, I thought that this is the right time for me to start thinking about how to get involved in areas I have always been interested in but never put enough time and effort into. Basically, this is going to be a hands-on semi random blog post series of exploring mostly low-level computer science and security topics. The plan is to have no rigid plan, go by interest, and to have fun.</description>
            
            <category>Random</category>
            
        </item>
        
        <item>
            <title>إستغلال ثغرات المتصفح | Webbrowser exploitation</title>
            <link>https://wes4m.io/posts/browser_exploitation/</link>
            <pubDate>Mon, Nov 25 2019</pubDate>
            
            <guid>https://wes4m.io/posts/browser_exploitation/</guid>
            <description>تنويه: إستغلال ثغرات المتصفحات ليس من إختصاصي إنما هذه السلسلة عبارة عن تدوين مستمر لطريقي في خوض هذا المجال وتعزيز لفهمي. أي اغلاط او اضافات أكون شاكر لكم. ملاحظة: إطلاع سابق وفهم كيفية عمل لغات البرمجة. والـ Interpreters بشكل سطحي مهمة جدآ لهذا الموضوع.
 قبل الخوض في إستغلال ثغرات المتصفحات يجب أن نكون على إطلاع بأن المتصفحات في هذا الوقت أصبحت من أضخم وأهم البرمجيات قد توازي في تعقيدها أنظمة التشغيل نظرآ لتكونها من عناصر عديدة مترابطة ومعقدة.</description>
            
            <category>Misc</category>
            
        </item>
        
        <item>
            <title>إستغلال ثغرات النواة | Kernel exploitation</title>
            <link>https://wes4m.io/posts/kernel_exploitation/</link>
            <pubDate>Tue, Aug 13 2019</pubDate>
            
            <guid>https://wes4m.io/posts/kernel_exploitation/</guid>
            <description>من اكثر الامثلة شيوعآ للإستخدام في هذا الموضوع هي مصطلحات مثل Android rooting, IOS Jailbreak ، فالكثير منا على إطلاع بها وبالغرض منها. ولكن هل تسائلت من قبل كيف تعمل في عمقها ؟
أيضآ لماذا لايمكنك إنهاء عمليات الـ Anti virus من مدير المهام في نظام وندوز بكل بساطة ؟ أو كيف تخفي بعض ملفات الإختراق نفسها عن برامج تتبع الإتصالات ومدير المهام وغيره.
كل هذه الإمور والكثير من الأمثلة الإخرى يمكن تنفيذها بعدة طرق أحدها ومن أهمها هي إستخدام نواة النظام وإستغلالها.</description>
            
            <category>Kernel</category>
            
            <category>Linux</category>
            
            <category>PWN</category>
            
            <category>Misc</category>
            
        </item>
        
        <item>
            <title>حل تحدي Production - DragonCTF</title>
            <link>https://wes4m.io/posts/dragonsector_production/</link>
            <pubDate>Mon, Oct 8 2018</pubDate>
            
            <guid>https://wes4m.io/posts/dragonsector_production/</guid>
            <description>من مشاركتي مع فريق @Shellphish إنتهت المسابقة بحصول الفريق على المركز الأول وكان هذا أحد التحديات الممتعة والمليئة بالمعلومات.
سأقوم بشرح لطريقة حل التحدي وشرح المعلومات المهمة في الحل
صورة من التحدي لمن ليس لديه معلومات ماهي تحديات CTF , Capture the flag هي طريقة ممتعة ومن أفضل الطرق بل أعتبرها في نظري من أهم الطرق في تعلم طرق الإختراق والهندسة العكسية والتشفير وغيرها من عمليات أساسية في الأمن السيبراني لمعلومات أكثر يمكنك قراءة شرح ممتاز من هنا</description>
            
            <category>CTF</category>
            
            <category>Linux</category>
            
            <category>PWN</category>
            
            <category>Misc</category>
            
        </item>
        
        <item>
            <title>آلية عمل | PE Infection</title>
            <link>https://wes4m.io/posts/pe_infection/</link>
            <pubDate>Sun, Aug 12 2018</pubDate>
            
            <guid>https://wes4m.io/posts/pe_infection/</guid>
            <description>توجد طرق إنتشار عديدة للبرمجيات الخبيثة عبر ثغرات الشبكات وغيرها. ولكن من الطرق المهمل ذكرها في المجتمع السيبراني العربي ما أكتب عنه هذا المقال. أتمنى أن يعود بفائدة للقارئ في حماية نفسه من مخاطر إنتشار البرمجيات الخبيثة. طرق الحماية في نهاية المقال. كما سأشرح بإختصار آلية عملها للمهتمين فالأمن السايبراني.
ماهي عدوى الملفات التنفيذية أو PE Infection هي من أقدم الطرق المستخدمة في نشر الملفات الخبيثة من باك دورز أو فايروسات وغيره في الجهاز.</description>
            
            <category>Malware</category>
            
            <category>Windows</category>
            
        </item>
        
        <item>
            <title>Demo of 20230609.zip</title>
            <link>https://wes4m.io/posts/demo-of-20230609/</link>
            <pubDate>Thu, Jan 18 2018</pubDate>
            
            <guid>https://wes4m.io/posts/demo-of-20230609/</guid>
            <description>Google launched 8 new TLDs on May 3rd, 2023 for EAP including .zip (Link) The security community had fun coming with all kinds of phishing ideas using it.
I made a tool that demonstrated some of this https://20230609.zip. More details and explinations are found in its homepage. The following is just one example of what can be done.
Github repos Many github repos include scripts such as build.sh docker-build.sh install.sh &amp;hellip;</description>
            
        </item>
        
    </channel>
</rss>
